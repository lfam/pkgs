When using the GPGME crypto integration (crypt_use_gpgme=yes) for S/MIME, allow
encrypting messages to self.

Patch copied from upstream NeoMutt repository:

https://github.com/neomutt/neomutt/commit/30402f50427203f349359a50dc0616e4e12f9718

From 30402f50427203f349359a50dc0616e4e12f9718 Mon Sep 17 00:00:00 2001
From: Richard Russon <rich@flatcap.org>
Date: Fri, 17 Jun 2016 00:31:48 +0100
Subject: [PATCH] feature: smime-encrypt-self

---
 crypt.c | 17 +++++++++++++++--
 init.h  |  6 ++++++
 mutt.h  |  1 +
 3 files changed, 22 insertions(+), 2 deletions(-)

diff --git a/crypt.c b/crypt.c
index 7659fdc5..4d366800 100644
--- a/crypt.c
+++ b/crypt.c
@@ -231,8 +231,21 @@ int mutt_protect (HEADER *msg, char *keylist)
     if ((WithCrypto & APPLICATION_SMIME)
         && (msg->security & APPLICATION_SMIME))
     {
-      if (!(tmp_pbody = crypt_smime_build_smime_entity (tmp_smime_pbody,
-                                                        keylist)))
+			  char *new_keylist = keylist;
+ 
+			  if (SmimeDefaultKey && query_quadoption(OPT_SMIMEENCRYPTSELF, _("Encrypt message to S/MIME Default Key also?")) == MUTT_YES)
+				  {
+					  /* +1 for NULL, +1 for \n */
+					  int size = mutt_strlen(keylist) + mutt_strlen(SmimeDefaultKey) + 2;
+					  new_keylist = safe_malloc(size);
+					  snprintf(new_keylist, size, "%s%s\n", keylist, SmimeDefaultKey);
+				  }
+ 		 
+			  tmp_pbody = crypt_smime_build_smime_entity (tmp_smime_pbody, new_keylist);
+			  if (new_keylist != keylist)
+				  FREE(&new_keylist);
+			  
+			  if (!tmp_pbody)
       {
 	/* signed ? free it! */
 	return (-1);
diff --git a/init.h b/init.h
index 3f3f96d9..b1d7b038 100644
--- a/init.h
+++ b/init.h
@@ -2971,6 +2971,12 @@ struct option_t MuttVars[] = {
   ** possible \fCprintf(3)\fP-like sequences.
   ** (S/MIME only)
   */
+  { "smime_encrypt_self",		DT_QUAD,	 R_NONE, OPT_SMIMEENCRYPTSELF, MUTT_NO },
+  /*
+  ** .pp
+  ** Encrypt the message to $$smime_default_key too.
+  ** (S/MIME only)
+  */
   { "smime_encrypt_with",	DT_STR,	 R_NONE, UL &SmimeCryptAlg, UL "aes256" },
   /*
   ** .pp
diff --git a/mutt.h b/mutt.h
index 2cf55b10..29662cc1 100644
--- a/mutt.h
+++ b/mutt.h
@@ -268,6 +268,7 @@ enum
   OPT_MIMEFWDREST,
   OPT_MOVE,
   OPT_PGPMIMEAUTO,     /* ask to revert to PGP/MIME when inline fails */
+  OPT_SMIMEENCRYPTSELF,
 #ifdef USE_POP
   OPT_POPDELETE,
   OPT_POPRECONNECT,
-- 
2.11.0

